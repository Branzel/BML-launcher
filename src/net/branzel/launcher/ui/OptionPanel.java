/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.branzel.launcher.ui;

import java.text.DecimalFormat;
import net.branzel.launcher.Launcher;

/**
 *
 * @author Branzel
 */
public class OptionPanel extends javax.swing.JPanel {
    private final Launcher launcher;
    /**
     * Creates new form OptionPanel
     */
    public OptionPanel(Launcher launcher) {
        this.launcher = launcher;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSliderRam = new javax.swing.JSlider();
        lblRamAm = new javax.swing.JLabel();
        lblRAM = new javax.swing.JLabel();
        ckbShowConsole = new javax.swing.JCheckBox();

        jSliderRam.setMaximum(5888);
        jSliderRam.setMinimum(256);
        jSliderRam.setToolTipText("");
        jSliderRam.setValue(512);
        jSliderRam.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRamStateChanged(evt);
            }
        });

        lblRamAm.setText("256 MB");

        lblRAM.setText("RAM Maximum (MB)");

        ckbShowConsole.setText("Show Console?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRAM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSliderRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRamAm))
                    .addComponent(ckbShowConsole))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRamAm)
                    .addComponent(lblRAM)
                    .addComponent(jSliderRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ckbShowConsole)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderRamStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRamStateChanged
        // TODO add your handling code here:
        if (jSliderRam.getValue() > 1023)
            lblRamAm.setText(roundTwoDecimals((float)(jSliderRam.getValue()) / 1024 ) + " GB");
        else
            lblRamAm.setText(jSliderRam.getValue() + " MB");        
    }//GEN-LAST:event_jSliderRamStateChanged

    double roundTwoDecimals(double d) {
        double result = d * 100;
        result = Math.round(result);
        result = result / 100;
        return result;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckbShowConsole;
    private javax.swing.JSlider jSliderRam;
    private javax.swing.JLabel lblRAM;
    private javax.swing.JLabel lblRamAm;
    // End of variables declaration//GEN-END:variables
    
    public boolean GetShowConsoleState() {
        System.out.println(ckbShowConsole.isSelected());
        return ckbShowConsole.isSelected();
    }
    
    public int GetRAMValue() {
        return jSliderRam.getValue();
    }
}